---
feedJobName: feedOrderLinesV4
feedOutput: feedOrderLines
sankeyWidth: 4000
flows:
  ### Flow that reads in all fragItemProductLkup files
  - flowId: fragItemProductLkup_Merge
    flowInputs:
      - fragItemProductLkup
    schema:
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - item_id
          aggregationOperations:
            - { columnName: product_id, operation: last() }

  ### Flow which brings in the fragOrderLinesPlacedTimestamp fragments
  - flowId: fragOrderLinesPlacedTimestamp_Merge
    flowInputs:
      - fragOrderLinesPlacedTimestamp
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
          aggregationOperations:
            - {columnName: placed_timestamp, operation: max()}

###  ### Flow that reads in all fragTransOrderIdWa files
###  - flowId: fragTransOrderIdWa Merge
###    flowInputs:
###      - fragTransOrderIdWa
###    flowSteps:
###      - type: AGGREGATION
###        flowStepInputs:
###          - fragTransOrderIdWa
###        columns:
###          - {columnName: waOrderId}
###        operations:
###          - {columnName: order_id, operation: last()}
###    flowSchema:
###      - { columnName: waOrderId, columnType: string }
###      - { columnName: order_id, columnType: string }
###
###  ### Flow that reads in all fragTransOrderLineIdWa files
###  - flowId: fragTransOrderLineIdWa Merge
###    flowInputs:
###      - fragTransOrderLineIdWa
###    flowSteps:
###      - type: AGGREGATION
###        flowStepInputs:
###          - fragTransOrderLineIdWa
###        columns:
###          - {columnName: waOrderId}
###          - {columnName: waOrderLineId}
###        operations:
###          - {columnName: order_id, operation: last()}
###          - {columnName: orderLineId, operation: last()}
###    flowSchema:
###      - { columnName: waOrderId, columnType: string }
###      - { columnName: waOrderLineId, columnType: string }
###      - { columnName: order_id, columnType: string }
###      - { columnName: orderLineId, columnType: string }

  ### Flow that aggregates fragOrderLinesShipments
  - flowId: fragOrderLinesShipments_Merge
    flowInputs:
      - fragOrderLinesShipments
###            - fragTransOrderIdWa_Merge
###            - fragTransOrderLineIdWa_Merge
    schema:
      - { columnName: orderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: shipment_promise_date_ref, columnType: integer }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_date_ref, columnType: integer }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_date_ref, columnType: integer }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: originalDateTime, columnType: date }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - orderLineId
            - order_id
          aggregationOperations:
          - { columnName: shipping_amount, operation: last() }
          - { columnName: shipping_ex_tax, operation: last() }
          - { columnName: shipping_cost, operation: last() }
          - { columnName: shipping_country, operation: last() }
          - { columnName: shipping_region, operation: last() }
          - { columnName: shipping_postal_code, operation: last() }
          - { columnName: shipping_method, operation: last() }
          - { columnName: delivery_location_type, operation: last() }
          - { columnName: shipment_promise_timestamp, operation: last() }
          - { columnName: shipment_promise_date_ref, operation: last() }
          - { columnName: delivery_promise_timestamp, operation: last() }
          - { columnName: delivery_promise_date_ref, operation: last() }
          - { columnName: pick_up_in_store_promise_timestamp, operation: last() }
          - { columnName: pick_up_in_store_promise_date_ref, operation: last() }
          - { columnName: is_free_shipping, operation: last() }
          - { columnName: is_express_shipping, operation: last() }
          - { columnName: pick_pack_cost, operation: last() }
          - { columnName: originalDateTime, operation: last() }
          - { columnName: order_id_type, operation: last() }

  - flowId: tempOrderIdSales ##Weighted Average File based on fragOrderLines
    flowInputs:
      - fragOrderLines
    schema:
      - { columnName: orderLineId, columnType: integer }
      - { columnName: order_id, columnType: string }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: sales, columnType: double }
      - { columnName: count, columnType: integer }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - sales
            - count
          aggregationOperations:
            - { columnName: sales, operation: sum() }
            - { columnName: count, operation: count() }

  - flowId: tempOrderSales ##Weighted Average Files base on fragOrderLines
    flowInputs:
      - fragOrderLines
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: sales, columnType: double }
      - { columnName: count, columnType: integer }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - sales
            - count
          aggregationOperations:
            - { columnName: sales, operation: sum() }
            - { columnName: count, operation: count() }

  - flowId: fragBusinessCalendar_Merge ##tempBusinessCalendar
    flowInputs:
      - fragBusinessCalendar
    schema:
      - { columnName: date, columnType: date }
      - { columnName: workingDay, columnType: boolean }
    flowSteps:
      - type: MARKDOWN
        logic: "\n
        **fragBusinessCalendar schema**\n
        \n
        - date\n
        - dayOffset\n
        \n
        -----
        \n
        **Core Flow Merge**\n
        \n
        Data from this step determines the dayOffset used to calculate if the day in question is a day the client ships.\n"
########################################
### add in content below
########################################
  - flowId: fragShippingCost_Merge ##tempShippingCost
    flowInputs:
      - fragShippingCost
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragOrderLinesPromos_Merge ##tempOrderLinesPromos
    flowInputs:
      - fragOrderLinesPromos
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragOrderLinesItemPromos_Merge ##tempOrderLinesItemPromos
    flowInputs:
      - fragOrderLinesItemPromos
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragOrderLinesOtherPromoCost_Merge ##tempOrderLinesOtherPromoCost
    flowInputs:
      - fragOrderLinesOtherPromoCost
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragOrderLinesInventoryFlags_Merge ##tempOrderLinesInventoryFlags
    flowInputs:
      - fragOrderLinesInventoryFlags
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragProductInventoryCost_Merge ##tempProductInventoryCost
    flowInputs:
      - fragProductInventoryCost
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragProductSample_Merge ##tempProductSample
    flowInputs:
      - fragProductSample
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragOrderLinesSamples_Merge ##tempOrderLinesSample
    flowInputs:
      - fragOrderLinesSamples
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragAttributeValueLkup_Merge ##tempAttributeValueLkup
    flowInputs:
      - fragAttributeValueLkup
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragShippingCountryLkup_Merge ##tempShippingCountryLkup
    flowInputs:
      - fragShippingCountryLkup
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragShippingOffsetLkup_Merge ##tempShippingOffsetLkup
    flowInputs:
      - fragShippingOffsetLkup
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragOrdersRef_Merge  ##tempOrdersRef
    flowInputs:
      - fragOrdersRef
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragOmsProductId_Merge  ##tempOmsProductId
    flowInputs:
      - fragOmsProductId
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragOmsItemId_Merge  ##tempOmsItemId
    flowInputs:
      - fragOmsItemId
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - orderLineId
          aggregationOperations:
            - { columnName: item_id, operation: first() }

  - flowId: fragCurrencyConversionRates_Merge  ##tempCurrencyConversionRates
    flowInputs:
      - fragCurrencyConversionRates
    schema:
      - { columnName: date, columnType: date }
      - { columnName: currency_code, columnType: string }
      - { columnName: conversion_rate, columnType: double }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - currency_code
          aggregationOperations:
            - { columnName: date, operation: last() }
            - { columnName: conversion_rate, operation: last() }

### TMaps

  - flowId: fragItemProductLkup_CoreFlowJoin_5
    flowInputs:
      - fragItemProductLkup_Merge
      - fragOrderLines
    schema:
      - { columnName: orderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: date }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: seller, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: currency_code, columnType: string }
      - { columnName: sales, columnType: double }
      - { columnName: sales_ex_tax, columnType: double }
      - { columnName: promo_info, columnType: string }
      - { columnName: other_promo_cost, columnType: double }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: is_backorder, columnType: boolean }
      - { columnName: is_preorder, columnType: boolean }
      - { columnName: is_ship_from_vendor, columnType: boolean }
      - { columnName: is_free_sample, columnType: boolean }
      - { columnName: unit_cost, columnType: double }
      - { columnName: current_price, columnType: double }
      - { columnName: full_price, columnType: double }
      - { columnName: price_currency_code, columnType: string }
      - { columnName: order_line_attribute1, columnType: string }
      - { columnName: order_line_attribute2, columnType: string }
      - { columnName: order_line_attribute3, columnType: string }
      - { columnName: order_line_attribute4, columnType: string }
      - { columnName: order_line_attribute5, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragOrderLines
            - fragItemProductLkup_Merge
          joinColumns:
            - item_id
          joinOperations:
            - {columnName: product_id, operation: item_id is not null}

  - flowId: fragOrderLinesPlacedTS_CoreFLowJoin_2
    flowInputs:
      - fragOrderLinesPlacedTimestamp_Merge
      - fragItemProductLkup_CoreFlowJoin_5  #tMap_5
    schema:
      - { columnName: orderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: date }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: seller, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: currency_code, columnType: string }
      - { columnName: sales, columnType: double }
      - { columnName: sales_ex_tax, columnType: double }
      - { columnName: promo_info, columnType: string }
      - { columnName: other_promo_cost, columnType: double }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: is_backorder, columnType: boolean }
      - { columnName: is_preorder, columnType: boolean }
      - { columnName: is_ship_from_vendor, columnType: boolean }
      - { columnName: is_free_sample, columnType: boolean }
      - { columnName: unit_cost, columnType: double }
      - { columnName: current_price, columnType: double }
      - { columnName: full_price, columnType: double }
      - { columnName: price_currency_code, columnType: string }
      - { columnName: order_line_attribute1, columnType: string }
      - { columnName: order_line_attribute2, columnType: string }
      - { columnName: order_line_attribute3, columnType: string }
      - { columnName: order_line_attribute4, columnType: string }
      - { columnName: order_line_attribute5, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragOrderLinesPlacedTimestamp_Merge
            - fragItemProductLkup_CoreFlowJoin_5
          joinColumns:
            - order_id
          joinOperations:
            - {columnName: placed_timestamp, operation: order_id is not null}

  - flowId: fragOrderLinesShipments_ItemProdLkup_30
    flowInputs:
      - fragOrderLinesShipments_Merge
      - fragItemProductLkup_Merge
    schema:
      - { columnName: orderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: shipment_promise_date_ref, columnType: integer }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_date_ref, columnType: integer }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_date_ref, columnType: integer }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: originalDateTime, columnType: date }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragOrderLinesShipments_Merge
            - fragItemProductLkup_Merge
          joinColumns:
            - item_id
          joinOperations:
          - {columnName: product_id, operation: 'item_id is not null'}

  - flowId: fragOrderLinesShipments_CoreFlowJoin_7
    flowInputs:
      - fragOrderLinesPlacedTS_CoreFLowJoin_2
      - fragOrderLinesShipments_ItemProdLkup_30
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragShippingCost_ItemProductLkup_32
    flowInputs:
      - tempOrderIdSales
      - fragItemProductLkup_Merge
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragShippingCost_CoreFlowJoin_16  ##Core Flow Order Lines for shipment and order data translations
    flowInputs:
      - fragOrderLinesShipments_CoreFlowJoin_7
      - fragShippingCost_ItemProductLkup_32
      - tempOrderSales
      - fragBusinessCalendar_Merge
      - fragShippingCost_Merge
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragOrderLinesPromos_ItemProductLkup_33
    flowInputs:
      - fragItemProductLkup_Merge
      - fragOrderLinesPromos_Merge
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragOrderLinesPromos_CoreFlowJoin_9
    flowInputs:
      - fragBusinessCalendar_Merge
      - fragOrderLinesPromos_ItemProductLkup_33
      - fragShippingCost_CoreFlowJoin_16
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragOrderLinesItemPromos_CoreFlowJoin_29
    flowInputs:
      - fragOrderLinesPromos_CoreFlowJoin_9
      - fragOrderLinesItemPromos_Merge
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragOrderLinesInvFlags_CoreFlowJoin_35
    flowInputs:
      - fragOrderLinesItemPromos_CoreFlowJoin_29
      - fragOrderLinesInventoryFlags_Merge
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: invCost_productSample_CoreFlowJoin_1
    flowInputs:
      - fragOrderLinesInvFlags_CoreFlowJoin_35
      - fragProductInventoryCost_Merge
      - fragProductSample_Merge
      - fragOrderLinesSamples_Merge
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragOrdLinesOthPromoCst_ItemProdLkup_23
    flowInputs:
      - fragItemProductLkup_Merge
      - fragOrderLinesOtherPromoCost_Merge
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragOrdLinesOtherPromoCst_CoreFlowJoin_4
    flowInputs:
      - invCost_productSample_CoreFlowJoin_1
      - fragOrdLinesOthPromoCst_ItemProdLkup_23
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragAttributeValueLkup_CoreFlowJoin_25
    flowInputs:
      - fragOrdLinesOtherPromoCst_CoreFlowJoin_4
      - fragAttributeValueLkup_Merge
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}

  - flowId: fragShippingCountryLkup_CoreFlowJoin_17
    flowInputs:
      - fragAttributeValueLkup_CoreFlowJoin_25
      - fragShippingCountryLkup_Merge
#    schema:
#      - { columnName: order_id, columnType: string }
#      - { columnName: order_id, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragX
            - fragXX
          joinColumns:
            - order_id
          joinOperations:
            - { columnName: item_id, operation: orderLineId is not null}
##-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
##-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
##-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
  - flowId: fragShippingOffsetLkup_CoreFlowJoin_31
    flowInputs:
      - fragShippingCountryLkup_CoreFlowJoin_17
      - fragShippingOffsetLkup_Merge
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: date }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: seller, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: currency_code, columnType: string }
      - { columnName: sales, columnType: double }
      - { columnName: sales_ex_tax, columnType: double }
      - { columnName: promo_info, columnType: string }
      - { columnName: other_promo_cost, columnType: double }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: is_backorder, columnType: boolean }
      - { columnName: is_preorder, columnType: boolean }
      - { columnName: is_ship_from_vendor, columnType: boolean }
      - { columnName: is_free_sample, columnType: boolean }
      - { columnName: unit_cost, columnType: float }
      - { columnName: current_price, columnType: float }
      - { columnName: full_price, columnType: float }
      - { columnName: price_currency_code, columnType: string }
      - { columnName: order_line_attribute1, columnType: string }
      - { columnName: order_line_attribute2, columnType: string }
      - { columnName: order_line_attribute3, columnType: string }
      - { columnName: order_line_attribute4, columnType: string }
      - { columnName: order_line_attribute5, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragShippingCountryLkup_CoreFlowJoin_17
            - fragShippingOffsetLkup_Merge
          joinColumns:
            - shipping_country
            - shipping_method
          joinOperations:
            - { columnName: shippingOffset, operation: shippingOffset is not null}
            - { columnName: deliveryOffset, operation: deliveryOffset is not null}
            - { columnName: pickupInStoreOffset, operation: pickupInStoreOffset is not null}

  - flowId: order_product_item_lkup_CoreFlowJoin_3  ##Core Flow Order Lines Orders/Product/Item Lookup
    flowInputs:
      - fragShippingOffsetLkup_CoreFlowJoin_31
      - fragOrdersRef_Merge
      - fragOmsProductId_Merge
      - fragOmsItemId_Merge
    schema:
      - { columnName: original_order_id, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: date }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: seller, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: currency_code, columnType: string }
      - { columnName: sales, columnType: double }
      - { columnName: sales_ex_tax, columnType: double }
      - { columnName: promo_info, columnType: string }
      - { columnName: other_promo_cost, columnType: double }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: is_backorder, columnType: boolean }
      - { columnName: is_preorder, columnType: boolean }
      - { columnName: is_ship_from_vendor, columnType: boolean }
      - { columnName: is_free_sample, columnType: boolean }
      - { columnName: unit_cost, columnType: float }
      - { columnName: current_price, columnType: float }
      - { columnName: full_price, columnType: float }
      - { columnName: price_currency_code, columnType: string }
      - { columnName: order_line_attribute1, columnType: string }
      - { columnName: order_line_attribute2, columnType: string }
      - { columnName: order_line_attribute3, columnType: string }
      - { columnName: order_line_attribute4, columnType: string }
      - { columnName: order_line_attribute5, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragOrdersRef_Merge
            - fragOmsProductId_Merge
            - fragOmsItemId_Merge
          joinColumns:
            - order_id
            - product_id --> oms_product_id
            - item_id --> oms_item_id
          joinOperations:
            - { columnName: web_order_id, operation: order_id is not null}
            - { columnName: oms_product_id, operation: product_id is not null}
            - { columnName: oms_item_id, operation: item_id is not null}

  - flowId: fragCurrencyConvRate_CoreFlowJoin_22
    flowInputs:
      - order_product_item_lkup_CoreFlowJoin_3
      - fragCurrencyConversionRates_Merge
    schema:
      - { columnName: original_order_id, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: date }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: seller, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: currency_code, columnType: string }
      - { columnName: sales, columnType: double }
      - { columnName: sales_ex_tax, columnType: double }
      - { columnName: promo_info, columnType: string }
      - { columnName: other_promo_cost, columnType: double }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: is_backorder, columnType: boolean }
      - { columnName: is_preorder, columnType: boolean }
      - { columnName: is_ship_from_vendor, columnType: boolean }
      - { columnName: is_free_sample, columnType: boolean }
      - { columnName: unit_cost, columnType: float }
      - { columnName: current_price, columnType: float }
      - { columnName: full_price, columnType: float }
      - { columnName: price_currency_code, columnType: string }
      - { columnName: order_line_attribute1, columnType: string }
      - { columnName: order_line_attribute2, columnType: string }
      - { columnName: order_line_attribute3, columnType: string }
      - { columnName: order_line_attribute4, columnType: string }
      - { columnName: order_line_attribute5, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragCurrencyConversionRates_Merge
            - order_product_item_lkup_CoreFlowJoin_3
          joinColumns:
            - currency_code
          joinOperations:
            - { columnName: conversion_rate, operation: conversion_rate is not null}

  - flowId: orderLineId_Consolidation_14
    flowInputs:
      - fragCurrencyConvRate_CoreFlowJoin_22
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: date }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: seller, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: currency_code, columnType: string }
      - { columnName: sales, columnType: double }
      - { columnName: sales_ex_tax, columnType: double }
      - { columnName: promo_info, columnType: string }
      - { columnName: other_promo_cost, columnType: double }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: is_backorder, columnType: boolean }
      - { columnName: is_preorder, columnType: boolean }
      - { columnName: is_ship_from_vendor, columnType: boolean }
      - { columnName: is_free_sample, columnType: boolean }
      - { columnName: unit_cost, columnType: float }
      - { columnName: current_price, columnType: float }
      - { columnName: full_price, columnType: float }
      - { columnName: price_currency_code, columnType: string }
      - { columnName: order_line_attribute1, columnType: string }
      - { columnName: order_line_attribute2, columnType: string }
      - { columnName: order_line_attribute3, columnType: string }
      - { columnName: order_line_attribute4, columnType: string }
      - { columnName: order_line_attribute5, columnType: string }
      - { columnName: countUnitCost, columnType: integer }
      - { columnName: countCurrentPrice, columnType: integer }
      - { columnName: countFullPrice, columnType: integer }
    flowSteps:
      - type: "AGGREGATE"
        logic:
          aggregationColumns:
            - order_id
            - item_id
            - product_id
            - seller
            - currency_code
            - shipping_country
            - shipping_region
            - shipping_postal_code
            - shipping_method
            - delivery_location_type
            - price_currency_code
            - order_line_attribute1
            - order_line_attribute2
            - order_line_attribute3
            - order_line_attribute4
            - order_line_attribute5
          aggregationOperations:
            - { columnName: placed_timestamp, operation: first() }
            - { columnName: quantity, operation: sum() }
            - { columnName: sales, operation: sum() }
            - { columnName: sales_ex_tax, operation: sum() }
            - { columnName: promo_info, operation: list }
            - { columnName: other_promo_cost, operation: sum() }
            - { columnName: shipping_amount, operation: sum() }
            - { columnName: shipping_ex_tax, operation: sum() }
            - { columnName: shipping_cost, operation: sum() }
            - { columnName: shipment_promise_timestamp, operation: last }
            - { columnName: delivery_promise_timestamp, operation: last }
            - { columnName: pick_up_in_store_promise_timestamp, operation: last }
            - { columnName: is_free_shipping, operation: last }
            - { columnName: is_express_shipping, operation: last }
            - { columnName: pick_pack_cost, operation: sum() }
            - { columnName: is_backorder, operation: last }
            - { columnName: is_preorder, operation: last }
            - { columnName: is_ship_from_vendor, operation: last }
            - { columnName: is_free_sample, operation: last }
            - { columnName: unit_cost,  operation: sum() }
            - { columnName: current_price, operation: sum() }
            - { columnName: full_price, operation: sum() }
            - { columnName: countUnitCost, operation: sum() }
            - { columnName: countCurrentPrice, operation: sum() }
            - { columnName: countFullPrice, operation: sum() }

  - flowId: fragOrderLinesPromoTranslation_Merge_44
    flowInputs:
      - fragOrderLinesPromoTranslation
    schema:
      - { columnName: original, columnType: string }
      - { columnName: splitPromo, columnType: string }
      - { columnName: text, columnType: string }
      - { columnName: value, columnType: string }
      - { columnName: classIn, columnType: string }
      - { columnName: typeIn, columnType: string }
      - { columnName: nameIn, columnType: string }
      - { columnName: cnt, columnType: integer }
      - { columnName: position, columnType: integer }
      - { columnName: classOut, columnType: string }
      - { columnName: typeOut, columnType: string }
      - { columnName: nameOut, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragOrderLinesPromoTranslation
            - fragOrderLinesPromoTranslation (self-join)
          joinColumns:
            - classIn
            - typeIn
            - nameIn
          joinOperations:
            - { columnName: classOut, operation: classOut is not null}
            - { columnName: typeOut, operation: typeOut is not null}
            - { columnName: nameOut, operation: nameOut is not null}

  - flowId: fragOrdLinesPromoTrans_CoreFlowJoin_54
    flowInputs:
      - fragOrderLinesPromoTranslation_Merge_44
      - orderLineId_Consolidation_14
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: date }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: seller, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: currency_code, columnType: string }
      - { columnName: sales, columnType: double }
      - { columnName: sales_ex_tax, columnType: double }
      - { columnName: promo_info, columnType: string }
      - { columnName: other_promo_cost, columnType: double }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: is_backorder, columnType: boolean }
      - { columnName: is_preorder, columnType: boolean }
      - { columnName: is_ship_from_vendor, columnType: boolean }
      - { columnName: is_free_sample, columnType: boolean }
      - { columnName: unit_cost, columnType: float }
      - { columnName: current_price, columnType: float }
      - { columnName: full_price, columnType: float }
      - { columnName: price_currency_code, columnType: string }
      - { columnName: order_line_attribute1, columnType: string }
      - { columnName: order_line_attribute2, columnType: string }
      - { columnName: order_line_attribute3, columnType: string }
      - { columnName: order_line_attribute4, columnType: string }
      - { columnName: order_line_attribute5, columnType: string }
    flowSteps:
      - type: "JOIN"
        logic:
          joinInputs:
            - fragOrderLinesPromoTranslation_Merge_44
            - orderLineId_Consolidation_14
          joinColumns:
            - promoInfo
          joinOperations:
            - { columnName: translated, operation: translated is not null}


