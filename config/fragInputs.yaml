---
fragInputs:
  - id: fragOrderLines
    isCore: true
    description: This is core fragment for feedOrderLines.
    schema:
      - { columnName: orderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: date }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: seller, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: currency_code, columnType: string }
      - { columnName: sales, columnType: double }
      - { columnName: sales_ex_tax, columnType: double }
      - { columnName: promo_info, columnType: string }
      - { columnName: other_promo_cost, columnType: double }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: is_backover, columnType: boolean }
      - { columnName: is_preorder, columnType: boolean }
      - { columnName: is_ship_from_vendor, columnType: boolean }
      - { columnName: is_free_sample, columnType: boolean }
      - { columnName: unit_cost, columnType: double }
      - { columnName: current_price, columnType: double }
      - { columnName: full_price, columnType: double }
      - { columnName: price_currency_code, columnType: string }
      - { columnName: order_line_attribute1, columnType: string }
      - { columnName: order_line_attribute2, columnType: string }
      - { columnName: order_line_attribute3, columnType: string }
      - { columnName: order_line_attribute4, columnType: string }
      - { columnName: order_line_attribute5, columnType: string }

  - id: fragItemProductLkup
    description: Mapping fragment that will set the 'product_id' field based on a given 'item_id'
    schema:
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }

  - id: fragOrderLinesPlacedTimestamp
    description: Mapping fragment that will set the 'placed_timestamp' based on 'order_id'
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: placed_timestamp, columnType: date }

  - id: fragOrderLinesShipments
    description: Mapping fragment that will set [shipping_amount, shipping_ex_tax, shipping_cost, shipping_country, shipping_region, shipping_postal_code, shipping_method, delivery_location_type, shipment_promise_timestamp, delivery_promise_timestamp, pick_up_in_store_promise_timestamp, is_free_shipping, is_express_shipping, pick_pack_cost] if any of those fields are needed from outside files.
    schema:
      - { columnName: orderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: shipping_amount, columnType: double }
      - { columnName: shipping_ex_tax, columnType: double }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_region, columnType: string }
      - { columnName: shipping_postal_code, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: delivery_location_type, columnType: string }
      - { columnName: shipment_promise_timestamp, columnType: date }
      - { columnName: shipment_promise_date_ref, columnType: integer }
      - { columnName: delivery_promise_timestamp, columnType: date }
      - { columnName: delivery_promise_date_ref, columnType: integer }
      - { columnName: pick_up_in_store_promise_timestamp, columnType: date }
      - { columnName: pick_up_in_store_promise_date_ref, columnType: integer }
      - { columnName: is_free_shipping, columnType: boolean }
      - { columnName: is_express_shipping, columnType: boolean }
      - { columnName: pick_pack_cost, columnType: double }
      - { columnName: originalDateTime, columnType: date }
      - { columnName: order_id_type, columnType: string }

  - id: fragTransOrderIdWa
    description: Mapping fragment for replacing fragOrderLinesShipments 'order_id'.
    schema:
      - { columnName: waOrderId, columnType: string }
      - { columnName: order_id, columnType: string }

  - id: fragTransOrderLineIdWa
    description: Mapping fragment for replacing fragOrderLinesShipments 'order_id' and/or 'orderLineId'.
    schema:
      - { columnName: waOrderId, columnType: string }
      - { columnName: waOrderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: orderLineId, columnType: string }

  - id: fragShippingCost
    description: Mapping fragment that will calculate 'shipping_cost' and 'shipment_promise_timestamp'.
    schema:
      - { columnName: shippingPartner, columnType: string }
      - { columnName: shippingMethod, columnType: string }
      - { columnName: deliveryCountry, columnType: string }
      - { columnName: deliveryRegion, columnType: string }
      - { columnName: matchType, columnType: string }
      - { columnName: shipping_cost, columnType: double }
      - { columnName: shippingPromiseOffset, columnType: integer }
      - { columnName: applyType, columnType: string }

  - id: fragBusinessCalendar
    description: Mapping fragment for calculating 'shipment_promise_timestamp'.
    schema:
      - { columnName: date, columnType: date }
      - { columnName: workingDay, columnType: boolean }

  - id: fragOrderLinesPromos
    description: Mapping fragment for calculating [sales, sales_ex_tax, promo_info].
    schema:
      - { columnName: orderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: item_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: promotionInfo, columnType: string }
      - { columnName: promoAmount, columnType: double }
      - { columnName: subtractFromSales, columnType: boolean }

  - id: fragOrderLinesItemPromos
    description: Mapping fragment for calculating [sales, sales_ex_tax, promo_info] by spreading the costs across the orderlines.
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: item_id, columnType: string }
      - { columnName: quantity, columnType: integer }
      - { columnName: promotion, columnType: string }
      - { columnName: promoAmount, columnType: double }
      - { columnName: subtractFromSales, columnType: boolean }
      - { columnName: subtractFromOrder, columnType: boolean }

  - id: fragOrderLinesInventoryFlags
    description: Mapping fragment that will set [is_backover, is_preorder, is_ship_from_vendor] by left outer joining on item_id
    schema:
      - { columnName: item_id, columnType: string }
      - { columnName: is_backover, columnType: boolean }
      - { columnName: is_preorder, columnType: boolean }
      - { columnName: is_ship_from_vendor, columnType: boolean }

  - id: fragProductSample
    description: Mapping fragment used to calculate 'other_promo_cost' of sample products.
    schema:
      - { columnName: product_id, columnType: string }
      - { columnName: item_id, columnType: string }
      - { columnName: cost, columnType: double }
      - { columnName: promoName, columnType: string }

  - id: fragOrderLinesSamples
    description: Mapping fragment used to calculate [promo_info, other_promo_cost, is_free_sample] of sample products.
    schema:
      - { columnName: orderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: product_id, columnType: string }
      - { columnName: item_id, columnType: string }
      - { columnName: cost, columnType: double }
      - { columnName: promoType, columnType: string }
      - { columnName: promoName, columnType: string }
      - { columnName: isSample, columnType: boolean }

  - id: fragProductInventoryCost
    description: Mapping fragment used to calculate 'other_promo_cost' of sample products.
    schema:
      - { columnName: date, columnType: date }
      - { columnName: product_id, columnType: string }
      - { columnName: item_id, columnType: string }
      - { columnName: unit_cost, columnType: double }
      - { columnName: site, columnType: string }
      - { columnName: currency_code, columnType: string }

  - id: fragOrderLinesOtherPromoCost
    description: Mapping fragment used to calculate 'other_promo_cost'
    schema:
      - { columnName: orderLineId, columnType: string }
      - { columnName: order_id, columnType: string }
      - { columnName: other_promo_cost, columnType: double }

  - id: fragAttributeValueLkup
    description: Mapping fragment used to translate [order_line_attribute1, order_line_attribute2, order_line_attribute3, order_line_attribute4, order_line_attribute5] values.
    schema:
      - { columnName: attributeNumber, columnType: integer }
      - { columnName: lookup, columnType: string }
      - { columnName: value, columnType: string }

  - id: fragShippingCountryLkup
    description: Mapping fragment used to translate 'shipping_country'
    schema:
      - { columnName: shipping_country, columnType: string }
      - { columnName: shippingCountryLkup, columnType: string }

  - id: fragShippingOffsetLkup
    description: Use when you need to calculate [shipment_promise_timestamp, delivery_promise_timestamp, pick_up_in_store_promise_timestamp], and you have shippingCountry and shippingMethod.
    schema:
      - { columnName: shipping_country, columnType: string }
      - { columnName: shipping_method, columnType: string }
      - { columnName: shippingOffset, columnType: integer }
      - { columnName: deliveryOffset, columnType: integer }
      - { columnName: pickupInStoreOffset, columnType: integer }

  - id: fragOmsProductId
    description: Mapping fragment used to translate 'product_id'
    schema:
      - { columnName: omsProductID, columnType: string }
      - { columnName: product_id, columnType: string }

  - id: fragOmsItemId
    description: Mapping fragment used to translate 'item_id'
    schema:
      - { columnName: omsItemId, columnType: string }
      - { columnName: item_id, columnType: string }

  - id: fragOrdersRef
    description: Mapping fragment used to translate 'order_id'
    schema:
      - { columnName: order_id, columnType: string }
      - { columnName: webOrderId, columnType: string }

  - id: fragCurrencyConversionRates
    description: Mapping fragment used to translate 'unit_cost'
    schema:
      - { columnName: date, columnType: date }
      - { columnName: currencyCode, columnType: string }
      - { columnName: conversionRate, columnType: double }

  - id: fragOrderLinesPromoTranslation
    description: Mapping fragment used to standardize or translate promo class, type, and name in fragOrderLines.promo_info to different values.  These are all standardized by splitting the promoInfo field {{class}}promo_type::promo_name=amount and matching to reference values in the fragment.
    schema:
      - { columnName: classIn, columnType: string }
      - { columnName: typeIn, columnType: string }
      - { columnName: nameIn, columnType: string }
      - { columnName: classOut, columnType: string }
      - { columnName: typeOut, columnType: string }
      - { columnName: nameOut, columnType: string }

  - id: fragItemAttributes
    isCore: true
    description: Core fragment which passes in all item attribute data by item id, attribute number and value
    schema:
      - { columnName: item_id, columnType: string }
      - { columnName: idx, columnType: integer }
      - { columnName: value, columnType: string }

  - id: fragItemAttributesSegmentValue
    description: Translation fragment that maps an item_id to a given 'segment' of a specific attribute number. This fragment only works in conjunction with fragItemAttributesSegment
    schema:
      - { columnName: item_id, columnType: string }
      - { columnName: idx, columnType: integer }
      - { columnName: segmentId, columnType: string }

  - id: fragItemAttributesSegment
    description: Translation fragment that maps a given 'segment' to an attribute value. This fragment only works in conjunction with fragItemAttributesSegmentValue
    schema:
      - { columnName: idx, columnType: integer }
      - { columnName: segmentId, columnType: string }
      - { columnName: value, columnType: string}